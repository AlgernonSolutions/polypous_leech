AWSTemplateFormatVersion: 2010-09-09
Outputs:
  WorkerRoleArn:
    Export:
      Name: dev-worker-role-arn
    Description: the ARN of the generated worker IAM role
    Value: !GetAtt
      - worker
      - Arn
Resources:
  readSecrets:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: readSecrets
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'secretsmanager:GetSecretValue'
            Resource: '*'
            Effect: Allow
      Roles:
        - !Ref worker
  workSwf:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: workSwf
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'swf:CountPendingActivityTasks'
              - 'swf:RespondActivityTaskCanceled'
              - 'swf:RequestCancelWorkflowExecution'
              - 'swf:SignalExternalWorkflowExecution'
              - 'swf:RespondDecisionTaskCompleted'
              - 'swf:CountClosedWorkflowExecutions'
              - 'swf:RespondActivityTaskFailed'
              - 'swf:StartWorkflowExecution'
              - 'swf:PollForDecisionTask'
              - 'swf:FailWorkflowExecution'
              - 'swf:RequestCancelExternalWorkflowExecution'
              - 'swf:RequestCancelActivityTask'
              - 'swf:ListOpenWorkflowExecutions'
              - 'swf:StartTimer'
              - 'swf:DescribeDomain'
              - 'swf:RecordActivityTaskHeartbeat'
              - 'swf:SignalWorkflowExecution'
              - 'swf:ContinueAsNewWorkflowExecution'
              - 'swf:RespondActivityTaskCompleted'
              - 'swf:TerminateWorkflowExecution'
              - 'swf:DescribeActivityType'
              - 'swf:PollForActivityTask'
              - 'swf:ListActivityTypes'
              - 'swf:CancelWorkflowExecution'
              - 'swf:StartChildWorkflowExecution'
              - 'swf:CompleteWorkflowExecution'
              - 'swf:DescribeWorkflowType'
              - 'swf:CancelTimer'
              - 'swf:RecordMarker'
              - 'swf:ListWorkflowTypes'
              - 'swf:GetWorkflowExecutionHistory'
              - 'swf:CountOpenWorkflowExecutions'
              - 'swf:ScheduleActivityTask'
              - 'swf:CountPendingDecisionTasks'
              - 'swf:DescribeWorkflowExecution'
              - 'swf:ListDomains'
              - 'swf:ListClosedWorkflowExecutions'
            Resource: '*'
            Effect: Allow
      Roles:
        - !Ref worker
  writeXray:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: writeXray
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'xray:PutTraceSegments'
              - 'xray:PutTelemetryRecords'
              - 'xray:GetSamplingRules'
              - 'xray:GetSamplingTargets'
              - 'xray:GetSamplingStatisticSummaries'
            Resource: '*'
            Effect: Allow
      Roles:
        - !Ref worker
  worker:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: worker
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - appsync.amazonaws.com
                - events.amazonaws.com
                - lambda.amazonaws.com
  workStateMachine:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: readSecrets
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'states:DescribeStateMachineForExecution'
              - 'states:ListStateMachines'
              - 'states:DescribeStateMachine'
              - 'states:DescribeExecution'
              - 'states:ListExecutions'
              - 'states:GetExecutionHistory'
              - 'states:StartExecution'
              - 'states:StopExecution'
            Resource: '*'
            Effect: Allow
      Roles:
        - !Ref worker
  accessVpc:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: accessVpc
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'ec2:CreateNetworkInterface'
              - 'ec2:DescribeNetworkInterfaces'
              - 'ec2:DeleteNetworkInterface'
            Resource: '*'
            Effect: Allow
      Roles:
        - !Ref worker
  workS3:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: workS3
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: 's3:*'
            Resource: '*'
            Effect: Allow
      Roles:
        - !Ref worker
  workParameterStore:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: workParameterStore
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'ssm:GetParameter'
              - 'ssm:PutParameter'
              - 'ssm:GetParameterHistory'
              - 'ssm:DeleteParameter'
            Resource: '*'
            Effect: Allow
      Roles:
        - !Ref worker
  workLogs:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: workLogs
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'logs:*'
            Resource: '*'
            Effect: Allow
      Roles:
        - !Ref worker
  sendSesEmail:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: sendSesEmail
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'ses:ListTemplates'
              - 'ses:ListCustomVerificationEmailTemplates'
              - 'ses:VerifyEmailIdentity'
              - 'ses:GetIdentityPolicies'
              - 'ses:GetSendQuota'
              - 'ses:DescribeConfigurationSet'
              - 'ses:ListReceiptFilters'
              - 'ses:GetIdentityMailFromDomainAttributes'
              - 'ses:VerifyDomainDkim'
              - 'ses:VerifyDomainIdentity'
              - 'ses:SendEmail'
              - 'ses:ListConfigurationSets'
              - 'ses:SendTemplatedEmail'
              - 'ses:SendCustomVerificationEmail'
              - 'ses:GetIdentityDkimAttributes'
              - 'ses:UpdateTemplate'
              - 'ses:DescribeReceiptRuleSet'
              - 'ses:ListReceiptRuleSets'
              - 'ses:GetTemplate'
              - 'ses:ListIdentities'
              - 'ses:VerifyEmailAddress'
              - 'ses:GetCustomVerificationEmailTemplate'
              - 'ses:SendRawEmail'
              - 'ses:GetSendStatistics'
              - 'ses:SendBounce'
              - 'ses:GetIdentityVerificationAttributes'
              - 'ses:GetIdentityNotificationAttributes'
              - 'ses:ListIdentityPolicies'
              - 'ses:DescribeReceiptRule'
              - 'ses:DescribeActiveReceiptRuleSet'
              - 'ses:GetAccountSendingEnabled'
              - 'ses:SendBulkTemplatedEmail'
              - 'ses:ListVerifiedEmailAddresses'
            Resource: '*'
            Effect: Allow
      Roles:
        - !Ref worker
  invokeLambda:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: invokeLambda
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'lambda:InvokeFunction'
            Resource: '*'
            Effect: Allow
      Roles:
        - !Ref worker
  workDynamo:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: workDynamo
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'dynamodb:BatchGetItem'
              - 'dynamodb:BatchWriteItem'
              - 'dynamodb:ListGlobalTables'
              - 'dynamodb:PutItem'
              - 'dynamodb:ListTables'
              - 'dynamodb:DescribeTable'
              - 'dynamodb:ListBackups'
              - 'dynamodb:GetItem'
              - 'dynamodb:Scan'
              - 'dynamodb:Query'
              - 'dynamodb:UpdateItem'
              - 'dynamodb:DescribeTimeToLive'
            Resource: '*'
            Effect: Allow
      Roles:
        - !Ref worker
  workSensitives:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: workSenstives
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'dynamodb:BatchGetItem'
              - 'dynamodb:BatchWriteItem'
              - 'dynamodb:ListGlobalTables'
              - 'dynamodb:PutItem'
              - 'dynamodb:ListTables'
              - 'dynamodb:DescribeTable'
              - 'dynamodb:ListBackups'
              - 'dynamodb:GetItem'
              - 'dynamodb:Scan'
              - 'dynamodb:Query'
              - 'dynamodb:UpdateItem'
              - 'dynamodb:DescribeTimeToLive'
            Resource: '*'
            Effect: Allow
      Roles:
        - !Ref worker
  queryGql:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: queryGql
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'appsync:ListDataSources'
              - 'appsync:ListFunctions'
              - 'appsync:GetDataSource'
              - 'appsync:ListApiKeys'
              - 'appsync:GetSchemaCreationStatus'
              - 'appsync:GetFunction'
              - 'appsync:GetResolver'
              - 'appsync:ListGraphqlApis'
              - 'appsync:GetGraphqlApi'
              - 'appsync:ListTypes'
              - 'appsync:GetIntrospectionSchema'
              - 'appsync:GraphQL'
              - 'appsync:ListResolvers'
              - 'appsync:GetType'
            Resource: '*'
            Effect: Allow
      Roles:
        - !Ref worker
  workGraph:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: workGraph
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: 'neptune-db:*'
            Resource: '*'
            Effect: Allow
      Roles:
        - !Ref worker
  passRole:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: passRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: 'iam:PassRole'
            Resource: '*'
            Effect: Allow
      Roles:
        - !Ref worker
  workKeys:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: workKeys
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'kms:Decrypt'
              - 'kms:GenerateDataKey*'
            Resource: '*'
            Effect: Allow
      Roles:
        - !Ref worker
  workSqs:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: workSqs
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: 'sqs:*'
            Resource: '*'
            Effect: Allow
      Roles:
        - !Ref worker
  workSns:
    Type: 'AWS::IAM::Policy'
    Properties:
       PolicyName: workSns
       PolicyDocument:
         Version: 2012-10-17
         Statement:
           - Action: 'sns:Publish'
             Resource: '*'
             Effect: Allow
       Roles:
         - !Ref worker