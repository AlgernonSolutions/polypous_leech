AWSTemplateFormatVersion: 2010-09-09
Outputs:
  ThirdSubnetAZ:
    Description: availability zone of third generated subnet
    Value: !GetAtt ThirdSubnet.AvailabilityZone
    Export:
      Name: vpc-subnet-az-3
  LambdaSgId:
    Export:
      Name: vpc-sg
    Description: id value of generated security group
    Value: !Ref LambdaSg
  VpcId:
    Description: id value of generated VPC
    Value: !Ref Vpc
  SecondSubnetId:
    Export:
      Name: vpc-subnet-2
    Description: id value of second generated subnet
    Value: !Ref SecondSubnet
  FirstSubnetId:
    Export:
      Name: vpc-subnet-1
    Description: id value of first generated subnet
    Value: !Ref FirstSubnet
  SecondSubnetAZ:
    Description: availability zone of second generated subnet
    Value: !GetAtt SecondSubnet.AvailabilityZone
    Export:
      Name: vpc-subnet-az-2
  FirstSubnetAZ:
    Description: availability zone of first generated subnet
    Value: !GetAtt FirstSubnet.AvailabilityZone
    Export:
      Name: vpc-subnet-az-1
  ThirdSubnetId:
    Export:
      Name: vpc-subnet-3
    Description: id value of third generated subnet
    Value: !Ref ThirdSubnet
Parameters:
  VpcCidr:
    Default: 192.168.0.0/16
    Type: String
    Description: Cidr Block of VPC
  FirstSubnetCidr:
    Default: 192.168.1.0/24
    Type: String
    Description: Cidr Block of First Created Subnet
  ThirdSubnetCidr:
    Default: 192.168.3.0/24
    Type: String
    Description: Cidr Block of Third Created Subnet
  SecondSubnetCidr:
    Default: 192.168.2.0/24
    Type: String
    Description: Cidr Block of Second Created Subnet
Resources:
  EC2SRTA429KF:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref ThirdSubnet
      RouteTableId: !Ref RouteTable
  FirstSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref FirstSubnetCidr
      AvailabilityZone: !Join
        - ''
        - - !Ref 'AWS::Region'
          - a
  LambdaSg:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      SecurityGroupIngress:
        - ToPort: -1
          IpProtocol: -1
          FromPort: -1
          CidrIp: !Ref VpcCidr
      GroupName: LambdaSg
      VpcId: !Ref Vpc
      GroupDescription: security group allowing lambda functions access to VPC resources
  SecondSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref SecondSubnetCidr
      AvailabilityZone: !Join
        - ''
        - - !Ref 'AWS::Region'
          - b
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 9fc65d22-2218-4ef3-b93b-6607326e5553
  EC2SRTA1MF09:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SecondSubnet
      RouteTableId: !Ref RouteTable
  InternetRoute:
    DependsOn:
      - InternetGateway
    Type: 'AWS::EC2::Route'
    Properties:
      GatewayId: !Ref InternetGateway
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref RouteTable
  IgwAttach:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties: {}
  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref Vpc
  Vpc:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VpcCidr
  EC2SRTA1HJ1H:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref FirstSubnet
      RouteTableId: !Ref RouteTable
  ThirdSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref ThirdSubnetCidr
      AvailabilityZone: !Join
        - ''
        - - !Ref 'AWS::Region'
          - c
